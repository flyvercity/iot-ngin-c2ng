%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.59.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2380 570
%%HiResBoundingBox: 0 0 2379.1199 570
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2379.1199 570 re
W
q
[0.24 0 0 -0.24 0 570] cm
q
0 0 9912.5 2375 re
W*
q
[20.987827 0 0 20.99659 152.413742 124.65081] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
50 93.166 m
26.198 93.166 6.834 73.802002 6.834 50 c
6.834 26.197998 26.198 6.834 50 6.834 c
73.802002 6.834 93.166 26.198 93.166 50 c
93.166 73.802002 73.802002 93.166 50 93.166 c
h
50 8.834 m
27.301001 8.834 8.834 27.301001 8.834 50 c
8.834 72.698997 27.301001 91.166 50 91.166 c
72.698997 91.166 91.166 72.698997 91.166 50 c
91.166 27.301003 72.698997 8.834 50 8.834 c
h
f
44.714001 46.549999 m
44.607002 45.807999 l
62.805 43.184998 72.852005 32.782997 76.327003 28.432999 c
76.913002 28.900999 l
73.382004 33.32 63.176998 43.889 44.714001 46.549999 c
h
f
47.612999 46.113998 m
47.612999 46.29916 47.594936 46.482544 47.558807 46.66415 c
47.522686 46.845753 47.469193 47.022087 47.398335 47.193157 c
47.327473 47.364227 47.240608 47.526745 47.137737 47.680702 c
47.034866 47.834663 46.917965 47.977108 46.787033 48.10804 c
46.656101 48.238968 46.513657 48.355869 46.359699 48.45874 c
46.205742 48.561607 46.043232 48.648472 45.872162 48.71933 c
45.701092 48.790192 45.524757 48.843685 45.343151 48.879807 c
45.161545 48.915932 44.978161 48.933994 44.792999 48.933998 c
44.607834 48.933994 44.424446 48.915932 44.24284 48.879807 c
44.061234 48.843685 43.884895 48.790192 43.713825 48.71933 c
43.542755 48.648472 43.380241 48.561607 43.226288 48.45874 c
43.07233 48.355869 42.929886 48.238968 42.798958 48.10804 c
42.668026 47.977108 42.551121 47.834663 42.44825 47.680702 c
42.345379 47.526745 42.258514 47.364235 42.187653 47.193165 c
42.116795 47.022095 42.063305 46.845757 42.027184 46.66415 c
41.991058 46.482544 41.972996 46.29916 41.973 46.113998 c
41.972996 45.928837 41.991058 45.745449 42.027184 45.563839 c
42.063305 45.382233 42.116795 45.205894 42.187653 45.034821 c
42.258514 44.86375 42.345379 44.701241 42.44825 44.547283 c
42.551121 44.393326 42.668026 44.250885 42.798958 44.119953 c
42.929886 43.989021 43.07233 43.87212 43.226288 43.769249 c
43.380241 43.666378 43.542755 43.57951 43.713825 43.508652 c
43.884895 43.437794 44.061234 43.384304 44.24284 43.348186 c
44.424446 43.312061 44.607834 43.293999 44.792999 43.293999 c
44.978161 43.293999 45.161545 43.312061 45.343151 43.348183 c
45.524757 43.384304 45.701092 43.437794 45.872162 43.508652 c
46.043232 43.57951 46.205742 43.666378 46.359699 43.769249 c
46.513657 43.87212 46.656101 43.989021 46.787033 44.119953 c
46.917965 44.250885 47.034866 44.393326 47.137737 44.547283 c
47.240608 44.701241 47.327473 44.863754 47.398335 45.034824 c
47.469193 45.205894 47.522686 45.382236 47.558811 45.563843 c
47.594936 45.745449 47.612999 45.928837 47.612999 46.113998 c
h
f
79.334 28.767 m
79.334 28.952164 79.315933 29.135548 79.279808 29.317152 c
79.243683 29.498758 79.190186 29.675097 79.119324 29.846165 c
79.048462 30.017233 78.961594 30.179747 78.858727 30.333704 c
78.755859 30.487663 78.638962 30.630108 78.508034 30.761038 c
78.377098 30.891968 78.23465 31.008869 78.080696 31.11174 c
77.926743 31.214611 77.764236 31.301476 77.593163 31.372335 c
77.422089 31.443195 77.24575 31.496687 77.064148 31.53281 c
76.882545 31.568935 76.699158 31.586998 76.514 31.587 c
76.328835 31.586998 76.145447 31.568935 75.963837 31.532812 c
75.782234 31.496689 75.605896 31.443197 75.43483 31.372337 c
75.263756 31.301477 75.101242 31.214611 74.947289 31.11174 c
74.793327 31.008869 74.650887 30.891968 74.519958 30.761038 c
74.38903 30.630108 74.272125 30.487661 74.16925 30.333702 c
74.066376 30.179745 73.979507 30.017231 73.908646 29.846163 c
73.837791 29.675095 73.784302 29.498756 73.748184 29.317152 c
73.712059 29.135548 73.693993 28.952164 73.694 28.767 c
73.693993 28.581835 73.712059 28.398449 73.748184 28.216843 c
73.784302 28.035234 73.837791 27.858898 73.908646 27.68783 c
73.979507 27.516762 74.066376 27.354248 74.16925 27.200289 c
74.272125 27.046331 74.38903 26.903887 74.519958 26.772957 c
74.650887 26.642025 74.793327 26.525124 74.947289 26.422253 c
75.101242 26.31938 75.263756 26.232515 75.43483 26.161657 c
75.605896 26.090797 75.782234 26.037308 75.963844 26.001184 c
76.145447 25.965061 76.328835 25.947001 76.514 25.947001 c
76.699158 25.947001 76.882538 25.965061 77.06414 26.001184 c
77.245743 26.037308 77.422081 26.090797 77.593155 26.161657 c
77.764229 26.232515 77.926743 26.31938 78.080696 26.422253 c
78.23465 26.525124 78.377098 26.642025 78.508034 26.772957 c
78.638962 26.903887 78.755859 27.046331 78.858727 27.200289 c
78.961594 27.354246 79.048462 27.51676 79.119324 27.687828 c
79.190186 27.858896 79.243683 28.035234 79.279808 28.216843 c
79.315933 28.398449 79.334 28.581835 79.334 28.767 c
h
f
33.874001 80.997002 m
30.390001 76.610001 24.862 67.458 26.979 55.445 c
27.717001 55.576 l
25.651001 67.298996 31.055 76.242004 34.459999 80.529999 c
33.874001 80.997002 l
h
f
30.164999 55.653 m
30.164997 55.838161 30.146935 56.021545 30.110811 56.203148 c
30.074688 56.384754 30.021194 56.561089 29.950335 56.732155 c
29.879475 56.903225 29.79261 57.065739 29.689739 57.219696 c
29.586866 57.373657 29.469967 57.516106 29.339037 57.647038 c
29.208105 57.777969 29.06566 57.894867 28.911703 57.997738 c
28.757744 58.100609 28.59523 58.187477 28.424162 58.258335 c
28.253094 58.329193 28.076756 58.382687 27.895151 58.418808 c
27.713547 58.454937 27.530163 58.473 27.344999 58.473 c
27.159836 58.473 26.97645 58.454937 26.794844 58.418808 c
26.613237 58.382687 26.436899 58.329193 26.265829 58.258331 c
26.094761 58.187473 25.932247 58.100609 25.77829 57.997738 c
25.624331 57.894867 25.481888 57.777969 25.350958 57.647038 c
25.220026 57.516106 25.103125 57.373657 25.000252 57.2197 c
24.897379 57.065742 24.810514 56.903229 24.739656 56.732159 c
24.668797 56.561089 24.615307 56.384754 24.579184 56.203152 c
24.54306 56.021545 24.525 55.838161 24.525 55.653 c
24.525 55.467834 24.54306 55.284447 24.579184 55.10284 c
24.615307 54.921234 24.668797 54.7449 24.739656 54.57383 c
24.810514 54.40276 24.897381 54.240246 25.000254 54.086292 c
25.103125 53.932331 25.220026 53.789886 25.350958 53.658958 c
25.481888 53.528027 25.624331 53.411125 25.77829 53.30825 c
25.932247 53.205383 26.094761 53.118519 26.265829 53.047657 c
26.436899 52.976799 26.613237 52.923309 26.794844 52.887188 c
26.97645 52.851063 27.159836 52.833 27.344999 52.833 c
27.530163 52.833 27.713547 52.851063 27.895151 52.887184 c
28.076756 52.923306 28.253094 52.976799 28.424162 53.047657 c
28.59523 53.118519 28.757742 53.205383 28.911701 53.308254 c
29.06566 53.411125 29.208105 53.528027 29.339037 53.658958 c
29.469967 53.789886 29.586866 53.932331 29.689739 54.086288 c
29.79261 54.240246 29.879475 54.402756 29.950335 54.573826 c
30.021194 54.744896 30.074688 54.921234 30.110811 55.10284 c
30.146935 55.284447 30.164997 55.467834 30.164999 55.653 c
h
f
36.900002 80.649002 m
36.899998 80.83416 36.881935 81.01754 36.84581 81.199142 c
36.809685 81.380745 36.756191 81.557083 36.685333 81.728157 c
36.614475 81.899231 36.527615 82.061745 36.424744 82.215698 c
36.321873 82.369652 36.204971 82.5121 36.074043 82.643036 c
35.943111 82.773964 35.800663 82.890862 35.646706 82.993729 c
35.492748 83.096596 35.330235 83.183464 35.159164 83.254326 c
34.988094 83.32518 34.81176 83.378677 34.630154 83.414803 c
34.448547 83.450935 34.265163 83.469002 34.080002 83.469002 c
33.894836 83.469002 33.711449 83.450935 33.529842 83.414803 c
33.348236 83.378677 33.171898 83.32518 33.000828 83.254326 c
32.829758 83.183464 32.667244 83.096596 32.513287 82.993729 c
32.359329 82.890862 32.216885 82.773972 32.085957 82.643044 c
31.955027 82.512115 31.838125 82.369667 31.735252 82.215698 c
31.632381 82.061745 31.545517 81.899231 31.474657 81.728157 c
31.403797 81.557083 31.350307 81.380745 31.314184 81.199142 c
31.278061 81.01754 31.26 80.83416 31.260002 80.649002 c
31.26 80.463844 31.278061 80.280457 31.314184 80.098846 c
31.350307 79.917236 31.403797 79.740898 31.474657 79.569824 c
31.545517 79.39875 31.632383 79.236237 31.735254 79.082283 c
31.838127 78.928329 31.955029 78.785881 32.08596 78.654953 c
32.216888 78.524017 32.359333 78.40712 32.51329 78.304253 c
32.667248 78.201378 32.829762 78.11451 33.000828 78.043655 c
33.171898 77.972801 33.348236 77.919312 33.529842 77.883186 c
33.711449 77.847061 33.894836 77.829002 34.080002 77.829002 c
34.265163 77.829002 34.448547 77.847061 34.630154 77.883186 c
34.81176 77.919312 34.988094 77.972801 35.159164 78.043655 c
35.330235 78.11451 35.492744 78.201378 35.646702 78.304253 c
35.800659 78.40712 35.943108 78.524017 36.074039 78.654953 c
36.204971 78.785881 36.321869 78.928329 36.42474 79.082283 c
36.527611 79.236237 36.614475 79.39875 36.685333 79.569824 c
36.756191 79.740898 36.809685 79.917236 36.84581 80.098846 c
36.881935 80.280457 36.899998 80.463844 36.900002 80.649002 c
h
f
78.553001 58.284 m
77.803001 58.263 l
78.065002 48.888 74.481003 39.915001 67.709999 32.998001 c
60.66 25.794001 50.819 21.706001 40.683998 21.765001 c
40.678997 21.015001 l
50.999996 20.975 61.054996 25.125002 68.245995 32.473 c
75.160004 39.536999 78.82 48.703999 78.553001 58.284 c
h
f
80.947998 58.131001 m
80.947998 58.316162 80.929932 58.499546 80.893806 58.681152 c
80.857681 58.862755 80.804192 59.039089 80.73333 59.210159 c
80.662476 59.381229 80.575607 59.543743 80.47274 59.697704 c
80.369865 59.851662 80.25296 59.994106 80.122032 60.125038 c
79.991104 60.255966 79.848656 60.372864 79.694702 60.475735 c
79.540741 60.578606 79.378227 60.665474 79.207153 60.736336 c
79.036087 60.807194 78.859749 60.860687 78.678146 60.896812 c
78.496544 60.932934 78.313156 60.950996 78.127998 60.951 c
77.942833 60.950996 77.759445 60.93293 77.577843 60.896809 c
77.396233 60.860687 77.219894 60.807194 77.04882 60.736332 c
76.877754 60.66547 76.71524 60.578606 76.561279 60.475735 c
76.407326 60.372864 76.264885 60.255962 76.133957 60.125034 c
76.003029 59.994102 75.886124 59.851658 75.783249 59.697701 c
75.680374 59.543743 75.593506 59.381229 75.522652 59.210159 c
75.45179 59.039089 75.3983 58.862755 75.362183 58.681152 c
75.326057 58.499546 75.307999 58.316162 75.307999 58.131001 c
75.307999 57.945835 75.326057 57.762451 75.362175 57.580845 c
75.3983 57.399239 75.45179 57.2229 75.522652 57.05183 c
75.593506 56.88076 75.680374 56.718246 75.783249 56.564289 c
75.886124 56.410332 76.003029 56.267887 76.133957 56.136959 c
76.264885 56.006027 76.407326 55.889126 76.561287 55.786255 c
76.71524 55.683384 76.877754 55.596516 77.04882 55.525658 c
77.219894 55.4548 77.396233 55.40131 77.577835 55.365189 c
77.759445 55.329063 77.942833 55.311001 78.127998 55.311001 c
78.313156 55.311001 78.496544 55.329063 78.678146 55.365185 c
78.859749 55.401306 79.036087 55.454796 79.207161 55.525654 c
79.378235 55.596512 79.540749 55.683376 79.694702 55.786247 c
79.848656 55.889118 79.991104 56.00602 80.122032 56.136951 c
80.25296 56.267879 80.369865 56.410324 80.47274 56.564285 c
80.575607 56.718243 80.662476 56.880756 80.73333 57.051826 c
80.804192 57.222897 80.857681 57.399235 80.893806 57.580841 c
80.929932 57.762447 80.947998 57.945835 80.947998 58.131001 c
h
f
43.639 21.441999 m
43.638996 21.627163 43.620934 21.810549 43.584812 21.992153 c
43.548687 22.173759 43.495193 22.350096 43.424335 22.521164 c
43.353477 22.692232 43.266609 22.854746 43.163738 23.008703 c
43.060867 23.162663 42.94397 23.305107 42.813038 23.436039 c
42.682106 23.566969 42.539661 23.68387 42.385704 23.786739 c
42.231747 23.889612 42.069233 23.976477 41.898163 24.047337 c
41.727093 24.118196 41.550755 24.171688 41.369148 24.207813 c
41.187542 24.243937 41.004162 24.261997 40.819 24.261999 c
40.633835 24.261997 40.450447 24.243935 40.268841 24.207811 c
40.087234 24.171688 39.9109 24.118196 39.73983 24.047337 c
39.56876 23.976477 39.406246 23.889612 39.252285 23.786739 c
39.098328 23.68387 38.955887 23.566969 38.824955 23.436039 c
38.694023 23.305107 38.577122 23.162663 38.474251 23.008703 c
38.37138 22.854746 38.284515 22.692232 38.213657 22.521164 c
38.142799 22.350096 38.089306 22.173759 38.053181 21.992155 c
38.017059 21.810549 37.998997 21.627163 37.999001 21.441999 c
37.998997 21.256836 38.017059 21.07345 38.053181 20.891842 c
38.089306 20.710238 38.142796 20.533899 38.213654 20.362831 c
38.284512 20.191761 38.37138 20.029247 38.474251 19.87529 c
38.577122 19.721333 38.694023 19.578888 38.824955 19.447958 c
38.955887 19.317026 39.098328 19.200125 39.252285 19.097254 c
39.406246 18.994383 39.56876 18.907518 39.73983 18.836658 c
39.9109 18.765799 40.087234 18.712307 40.268841 18.676184 c
40.450447 18.64006 40.633835 18.622 40.819 18.622 c
41.004162 18.622 41.187542 18.640062 41.369148 18.676186 c
41.550755 18.712309 41.727093 18.765799 41.898163 18.836658 c
42.069233 18.907518 42.231743 18.994383 42.3857 19.097254 c
42.539658 19.200125 42.682102 19.317026 42.813034 19.447958 c
42.943966 19.578888 43.060863 19.721333 43.163734 19.87529 c
43.266605 20.029247 43.353474 20.191761 43.424335 20.362831 c
43.495193 20.533899 43.548687 20.710238 43.584812 20.891842 c
43.620934 21.07345 43.638996 21.256836 43.639 21.441999 c
h
f
55.398998 79.060997 m
32.777 77.945 17.439999 63.132996 10.628998 49.642998 c
5.621998 39.724998 4.838998 30.060997 8.585998 24.420998 c
11.003998 20.780998 15.160997 19.059998 20.594997 19.437998 c
20.542997 20.185997 l
15.378998 19.824997 11.469997 21.434998 9.209997 24.835997 c
5.611997 30.251997 6.411997 39.626999 11.297998 49.304996 c
18.012997 62.606995 33.134998 77.210999 55.435997 78.310997 c
55.398998 79.060997 l
h
f
58.097 78.637001 m
58.097 78.822159 58.078938 79.005547 58.042812 79.187149 c
58.006691 79.368752 57.953197 79.54509 57.882336 79.716164 c
57.811474 79.88723 57.724609 80.049744 57.621742 80.203705 c
57.518871 80.357658 57.40197 80.500107 57.271042 80.631035 c
57.14011 80.761963 56.997665 80.87886 56.843708 80.981743 c
56.689751 81.08461 56.527237 81.171471 56.356167 81.242332 c
56.185097 81.313194 56.008759 81.366692 55.827152 81.402817 c
55.645546 81.438942 55.462162 81.457001 55.277 81.457001 c
55.091835 81.457001 54.908447 81.438942 54.726841 81.402817 c
54.545235 81.366692 54.368896 81.313194 54.19783 81.242332 c
54.02676 81.171471 53.864246 81.08461 53.710289 80.981743 c
53.556328 80.87886 53.413883 80.761963 53.282955 80.631035 c
53.152023 80.500107 53.035122 80.357658 52.932251 80.203697 c
52.82938 80.049744 52.742512 79.88723 52.671654 79.716156 c
52.600792 79.545082 52.547302 79.368752 52.511181 79.187149 c
52.47506 79.005547 52.456997 78.822159 52.457001 78.637001 c
52.456997 78.451836 52.47506 78.268448 52.511185 78.086845 c
52.547302 77.905228 52.600792 77.728889 52.671654 77.557816 c
52.742512 77.386749 52.82938 77.224236 52.932251 77.070282 c
53.035122 76.916321 53.152023 76.77388 53.282955 76.642952 c
53.413883 76.512024 53.556328 76.395119 53.710289 76.292244 c
53.864243 76.189377 54.026756 76.102509 54.197826 76.031654 c
54.368896 75.960793 54.545231 75.907303 54.726837 75.871178 c
54.908447 75.83506 55.091835 75.817001 55.277 75.817001 c
55.462162 75.817001 55.645546 75.83506 55.827152 75.871185 c
56.008759 75.907303 56.185093 75.960793 56.356163 76.031654 c
56.527233 76.102509 56.689747 76.189377 56.843704 76.292244 c
56.997662 76.395119 57.140106 76.512024 57.271038 76.642952 c
57.401966 76.77388 57.518867 76.916321 57.621738 77.070274 c
57.724609 77.224236 57.811474 77.386749 57.882336 77.557816 c
57.953197 77.728889 58.006691 77.905228 58.042812 78.086838 c
58.078938 78.268448 58.097 78.451836 58.097 78.637001 c
h
f
23.573999 83.266998 m
13.12 81.553001 6.04 74.011002 5.536 64.052002 c
5.052 54.472 10.948999 43.083 25.215 39.234001 c
25.41 39.958 l
11.548 43.698002 5.816 54.734001 6.286 64.014 c
6.672 71.648003 11.448 80.518997 23.695999 82.527 c
23.573999 83.266998 l
h
f
27.999001 39.639999 m
27.998999 39.825161 27.980936 40.008545 27.944811 40.190151 c
27.908688 40.371758 27.855196 40.548092 27.784338 40.719162 c
27.713478 40.890232 27.626614 41.052742 27.523741 41.206699 c
27.42087 41.360657 27.30397 41.503101 27.17304 41.634033 c
27.04211 41.764965 26.899664 41.881866 26.745705 41.984737 c
26.591747 42.087608 26.429234 42.174473 26.258165 42.245331 c
26.087095 42.316189 25.910757 42.369682 25.729153 42.405807 c
25.547548 42.441936 25.364164 42.459999 25.179001 42.459999 c
24.993837 42.459999 24.810452 42.441936 24.628845 42.405807 c
24.447241 42.369686 24.270903 42.316193 24.099833 42.245335 c
23.928762 42.174473 23.766249 42.087608 23.612289 41.984737 c
23.45833 41.881866 23.315887 41.764965 23.184958 41.634037 c
23.054028 41.503105 22.937124 41.360661 22.834251 41.206699 c
22.73138 41.052742 22.644516 40.890232 22.573658 40.719162 c
22.502798 40.548092 22.449308 40.371758 22.413185 40.190151 c
22.377062 40.008545 22.358999 39.825161 22.359001 39.639999 c
22.358999 39.454834 22.377062 39.27145 22.413185 39.089844 c
22.449308 38.908237 22.502798 38.731903 22.573658 38.560833 c
22.644516 38.389763 22.73138 38.227245 22.834253 38.073288 c
22.937126 37.919331 23.054028 37.77689 23.184958 37.645958 c
23.315887 37.515026 23.45833 37.398125 23.612288 37.295254 c
23.766247 37.192383 23.928761 37.105518 24.099831 37.03466 c
24.270901 36.963799 24.447239 36.910305 24.628845 36.874184 c
24.810452 36.838062 24.993837 36.82 25.179001 36.82 c
25.364164 36.82 25.547548 36.838062 25.729153 36.874184 c
25.910757 36.910305 26.087095 36.963799 26.258165 37.03466 c
26.429234 37.105518 26.591747 37.192383 26.745707 37.295254 c
26.899666 37.398125 27.04211 37.515026 27.17304 37.645958 c
27.30397 37.77689 27.42087 37.919334 27.523741 38.073292 c
27.626614 38.227249 27.713478 38.389763 27.784338 38.560833 c
27.855196 38.731903 27.908688 38.908237 27.944811 39.089844 c
27.980936 39.27145 27.998999 39.454834 27.999001 39.639999 c
h
f
72.426003 94.555 m
72.101006 94.555 71.772003 94.540001 71.438004 94.509003 c
65.102005 93.920006 59.363003 88.067001 56.084003 78.851006 c
56.791004 78.599007 l
59.969006 87.533005 65.470001 93.201004 71.507004 93.762009 c
74.757004 94.071007 77.634003 92.761009 79.028 90.365005 c
80.471001 87.886002 80.054001 84.679008 77.883003 81.569008 c
78.498001 81.139008 l
80.843002 84.499008 81.271004 87.999008 79.676003 90.742004 c
78.278 93.143997 75.556 94.555 72.426003 94.555 c
h
f
63.068001 18.924 m
62.355 18.690001 l
64.058998 13.523001 67.069 10.194 70.614998 9.559001 c
72.797997 9.165001 74.944 9.910001 76.209999 11.497001 c
77.460999 13.065001 77.663002 15.176001 76.765999 17.287001 c
76.076996 16.994001 l
76.862999 15.144001 76.697998 13.311001 75.624992 11.965002 c
74.530991 10.594002 72.661995 9.955002 70.747993 10.298002 c
67.481003 10.882 64.682999 14.027 63.068001 18.924 c
h
f
65.591003 18.677 m
65.591003 18.862164 65.572937 19.045547 65.536812 19.227152 c
65.500687 19.408758 65.447197 19.585096 65.376335 19.756165 c
65.305481 19.927235 65.218613 20.089748 65.115738 20.243706 c
65.012871 20.397663 64.895966 20.540108 64.765038 20.67104 c
64.634102 20.80197 64.491653 20.918871 64.3377 21.021742 c
64.183746 21.124613 64.021233 21.211477 63.850159 21.282337 c
63.679092 21.353197 63.502758 21.406689 63.321156 21.442812 c
63.139549 21.478937 62.956165 21.497 62.771004 21.497 c
62.585838 21.497 62.402454 21.478937 62.220848 21.442814 c
62.039238 21.406689 61.8629 21.353197 61.69183 21.282337 c
61.52076 21.211477 61.358246 21.124613 61.204288 21.021742 c
61.050331 20.918871 60.90789 20.80197 60.776958 20.67104 c
60.646027 20.540108 60.529125 20.397663 60.42625 20.243706 c
60.323376 20.089748 60.236511 19.927235 60.165653 19.756165 c
60.094795 19.585096 60.041302 19.408758 60.00518 19.227152 c
59.969059 19.045547 59.950996 18.862164 59.951 18.677 c
59.950996 18.491835 59.969055 18.308449 60.005177 18.126844 c
60.041302 17.945238 60.094795 17.7689 60.165653 17.597832 c
60.236511 17.426762 60.323376 17.264248 60.42625 17.110289 c
60.529125 16.956331 60.646027 16.813887 60.776958 16.682957 c
60.90789 16.552027 61.050331 16.435125 61.204288 16.332254 c
61.358246 16.229383 61.520756 16.142519 61.691826 16.071659 c
61.862896 16.000801 62.039234 15.94731 62.22084 15.911186 c
62.402451 15.875062 62.585838 15.857 62.771004 15.857 c
62.956165 15.857 63.139549 15.875062 63.321156 15.911185 c
63.502762 15.94731 63.679096 16.000801 63.850166 16.071659 c
64.021233 16.142519 64.183746 16.229383 64.3377 16.332254 c
64.491653 16.435125 64.634102 16.552027 64.765038 16.682957 c
64.895966 16.813887 65.012871 16.956331 65.115738 17.110289 c
65.218613 17.264248 65.305481 17.426762 65.376335 17.597832 c
65.447197 17.7689 65.500687 17.945238 65.536812 18.126844 c
65.572937 18.308449 65.591003 18.491835 65.591003 18.677 c
h
f
Q
q
[70.346222 0 0 70.375595 2569.0491 150.693054] cm
/DeviceRGB {} CS
[0.9333 0.8941 0.0392] SC
/DeviceRGB {} cs
[0.9333 0.8941 0.0392] sc
10.2 8.940001 m
4.52 8.940001 l
4.52 11.6 l
9.18 11.6 l
9.18 14.34 l
4.52 14.34 l
4.52 20 l
1.200001 20 l
1.200001 6 l
10.200001 6 l
10.200001 8.940001 l
10.2 8.940001 l
h
15.08 5.86 m
15.08 20 l
11.92 20 l
11.92 5.86 l
15.08 5.86 l
15.08 5.86 l
h
25.559999 9.56 m
28.699999 9.56 l
22.339998 23.799999 l
19.179998 23.799999 l
21.099998 19.639999 l
16.599999 9.56 l
19.739998 9.56 l
22.659998 16.24 l
25.559999 9.56 l
h
41.799999 9.56 m
37.139999 20 l
34.360001 20 l
29.700001 9.56 l
32.84 9.56 l
35.760002 16.24 l
38.660004 9.56 l
41.800003 9.56 l
41.799999 9.56 l
h
48.48 9.42 m
50.84 9.42 54.139999 11.2 53.48 15.9 c
46.220001 15.9 l
46.580002 16.98 47.52 17.539999 48.780003 17.539999 c
50.060001 17.539999 50.460003 17.259998 51.180004 16.959999 c
52.920006 18.639999 l
52.000008 19.539999 50.760006 20.199999 48.660004 20.199999 c
46.080002 20.199999 43.000004 18.419998 43.000004 14.839998 c
43.000004 11.199998 46.120003 9.419998 48.480003 9.419998 c
48.48 9.42 l
h
48.48 12.12 m
47.579998 12.12 46.66 12.639999 46.259998 13.68 c
50.68 13.68 l
50.360001 12.64 49.380001 12.120001 48.48 12.120001 c
48.48 12.12 l
h
61.959999 9.44 m
62.239998 9.44 62.52 9.44 62.779999 9.5 c
62.779999 12.520001 l
62.539997 12.46 62.259998 12.46 62.059998 12.46 c
60.139999 12.46 58.599998 13.84 58.439999 15.76 c
58.439999 20 l
55.279999 20 l
55.279999 9.6 l
58.439999 9.6 l
58.439999 12.14 l
58.919998 10.58 60.119999 9.440001 61.959999 9.440001 c
61.959999 9.44 l
h
69.519997 9.42 m
71.419998 9.42 73.019997 10.22 74 11.9 c
71.599998 13.04 l
71.080002 12.6 70.659996 12.2 69.559998 12.2 c
68.360001 12.2 67.139999 13.12 67.139999 14.82 c
67.139999 16.5 68.360001 17.379999 69.559998 17.379999 c
70.659996 17.379999 71.079994 17.019999 71.599998 16.58 c
74.040001 17.719999 l
73.020004 19.4 71.459999 20.16 69.520004 20.16 c
67.200005 20.16 64.080002 18.5 64.080002 14.82 c
64.080002 11.2 67.200005 9.42 69.520004 9.42 c
69.519997 9.42 l
h
78.82 5.86 m
78.82 8.520001 l
75.659996 8.520001 l
75.659996 5.860001 l
78.82 5.860001 l
78.82 5.86 l
h
78.82 9.6 m
78.82 20 l
75.659996 20 l
75.659996 9.6 l
78.82 9.6 l
h
85.919998 17.360001 m
86.479996 17.360001 86.879997 17.280001 87.32 17.16 c
87.32 19.779999 l
86.879997 19.98 86.159996 20.119999 85.099998 20.119999 c
83.360001 20.119999 81.900002 19.539999 81.900002 16.339998 c
81.900002 12.199999 l
80.440002 12.199999 l
80.440002 9.599999 l
81.900002 9.599999 l
81.900002 7.159998 l
85.060005 7.159998 l
85.060005 9.599999 l
87.280006 9.599999 l
87.280006 12.199999 l
85.060005 12.199999 l
85.060005 16.339998 l
85.060005 16.799997 85.180008 17.359999 85.920006 17.359999 c
85.919998 17.360001 l
h
97.440002 9.56 m
100.580002 9.56 l
94.220001 23.799999 l
91.059998 23.799999 l
92.979996 19.639999 l
88.479996 9.56 l
91.619995 9.56 l
94.539993 16.24 l
97.440002 9.56 l
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
